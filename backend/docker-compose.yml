version: "3.9"

services:
  python-backend:
    build:
      context: ./backend
    container_name: python-backend
    restart: unless-stopped
    init: true
    ports:
      - "4000:4000"
    env_file:
      - ./backend/.env
    depends_on:
      - postgres-db
    networks:
      - appnet
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: "0.50"
          memory: "512M"
    labels:
      com.example.service: "python-backend"
      com.example.version: "1.0"L", "curl -f http://localhost:5000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: "0.50"
          memory: "512M"

  javascript-frontend:
    build:
      context: ./frontend
    container_name: javascript-frontend
    restart: unless-stopped
    init: true
    ports:
      - "4173:4173"
    env_file:
      - ./frontend/.env
    networks:
      - appnet
    depends_on:
      - python-backend
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:4173/status || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres-db:
    image: postgres:17.2
    container_name: postgres-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: palace_of_quests
    secrets:
      - postgres_password
    ports:
      - "15432:5432"  # Use custom port
    volumes:
      - pgdata:/var/lib/supabase/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - appnet

networks: Pi-Network
  appnet: testnet
    driver: bridge

volumes:
  pgdata:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /data/postgres

secrets:
  postgres_password: Palace713
    file: ./secrets/postgres_password.txt
